{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for Gin application.",
        "title": "Gin Samples API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://example.com/contact",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/hello": {
            "get": {
                "description": "Returns a greeting message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Get a greeting message",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Greeting"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new greeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Create a new greeting message",
                "parameters": [
                    {
                        "description": "Greeting Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GreetingInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Greeting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ProblemDetail"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/hello/all": {
            "get": {
                "description": "Returns all greeting messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Get all greeting messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Greeting"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Greeting": {
            "description": "Greeting model",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "description": "Message is the greeting text",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Hello, World!"
                }
            }
        },
        "model.GreetingInput": {
            "description": "Input model for creating a new greeting",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "description": "Message is the greeting text to be created",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Hello, World!"
                }
            }
        },
        "model.ProblemDetail": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "violations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Violation"
                    }
                }
            }
        },
        "model.Violation": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "rejectedValue": {
                    "type": "string"
                }
            }
        }
    }
}