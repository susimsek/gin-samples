{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for Gin application with JWT authentication.",
        "title": "Gin Samples API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://example.com/contact",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Validates user credentials and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate user and generate token",
                "parameters": [
                    {
                        "description": "Login Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/hello": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a greeting message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Get a greeting message",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GreetingResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new greeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Create a new greeting message",
                "parameters": [
                    {
                        "description": "Greeting Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GreetingInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.GreetingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/hello/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all greeting messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Get all greeting messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GreetingResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/api/hello/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single greeting message by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Get a greeting by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Greeting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GreetingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a greeting message by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Update a greeting message by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Greeting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Greeting Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GreetingInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GreetingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a greeting message by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Delete a greeting message by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Greeting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ProblemDetail"
                        }
                    }
                }
            }
        },
        "/health/liveness": {
            "get": {
                "description": "Returns the liveness status of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check if the application is alive",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthStatus"
                        }
                    }
                }
            }
        },
        "/health/readiness": {
            "get": {
                "description": "Returns the readiness status of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check if the application is ready",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.GreetingInput": {
            "description": "Input dto for creating a new greeting",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "description": "Message is the greeting text to be created",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Hello, World!"
                }
            }
        },
        "dto.GreetingResponse": {
            "description": "Greeting dto",
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "message"
            ],
            "properties": {
                "createdAt": {
                    "description": "CreatedAt is the timestamp when the greeting was created",
                    "type": "string",
                    "example": "2025-01-05T10:00:00Z"
                },
                "id": {
                    "description": "ID of the greeting",
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "description": "Message is the greeting text",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Hello, World!"
                },
                "updatedAt": {
                    "description": "UpdatedAt is the timestamp when the greeting was last updated",
                    "type": "string",
                    "example": "2025-01-05T12:00:00Z"
                }
            }
        },
        "dto.HealthStatus": {
            "description": "Health status dto",
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "description": "Status indicates the health of the application",
                    "type": "string",
                    "example": "UP"
                }
            }
        },
        "dto.LoginInput": {
            "description": "Login request DTO containing username and password",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password is the password of the user",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 4,
                    "example": "password"
                },
                "username": {
                    "description": "Username is the username of the user",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "admin"
                }
            }
        },
        "dto.ProblemDetail": {
            "description": "Represents a structured error response for the API",
            "type": "object",
            "properties": {
                "detail": {
                    "description": "Detail provides a more detailed explanation of the error",
                    "type": "string",
                    "example": "One or more fields failed validation"
                },
                "error": {
                    "description": "Error is a machine-readable error code",
                    "type": "string",
                    "example": "invalid_request"
                },
                "instance": {
                    "description": "Instance is a URI that identifies the specific occurrence of the error",
                    "type": "string",
                    "example": "/api/hello"
                },
                "status": {
                    "description": "HTTP status code for the error",
                    "type": "integer",
                    "example": 400
                },
                "title": {
                    "description": "Title is a short, human-readable summary of the error",
                    "type": "string",
                    "example": "Validation Error"
                },
                "type": {
                    "description": "Type of the error, usually a URI identifying the error type",
                    "type": "string",
                    "example": "about:blank"
                },
                "violations": {
                    "description": "Violations is a list of validation errors (optional)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Violation"
                    }
                }
            }
        },
        "dto.TokenResponse": {
            "description": "JWT token response DTO",
            "type": "object",
            "required": [
                "accessToken",
                "accessTokenExpiresIn",
                "tokenType"
            ],
            "properties": {
                "accessToken": {
                    "description": "AccessToken is the JWT access token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "accessTokenExpiresIn": {
                    "description": "AccessTokenExpiresIn is the expiration time of the access token in seconds",
                    "type": "integer",
                    "example": 3600
                },
                "tokenType": {
                    "description": "TokenType is the type of the token",
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "dto.Violation": {
            "description": "Represents a single validation error for a field",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the validation rule that was violated",
                    "type": "string",
                    "example": "min"
                },
                "field": {
                    "description": "Field that failed validation",
                    "type": "string",
                    "example": "message"
                },
                "message": {
                    "description": "Error message for the violation",
                    "type": "string",
                    "example": "The message must be at least 3 characters long"
                },
                "object": {
                    "description": "Object that contains the field (optional)",
                    "type": "string",
                    "example": "GreetingInput"
                },
                "rejectedValue": {
                    "description": "Rejected value of the field",
                    "type": "string",
                    "example": "Hi"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}