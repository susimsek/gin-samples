name: Build, Test, and Publish Application

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
          cache-dependency-path: |
            **/go.sum

      - name: Install UPX
        run: sudo apt-get update && sudo apt-get install -y upx

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.63

      - name: Run Tests
        run:  go test ./... -v -coverprofile=coverage.out

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags '-static'" -o main ./cmd/app/main.go
          upx --ultra-brute --lzma main

      - name: Build Docker Image
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/gin-app:${{ github.ref_name }} .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/gin-app:${{ github.ref_name }}
